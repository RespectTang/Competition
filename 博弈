Nimm's Game
/*************************************************************************************************************/
参考资料：
https://blog.csdn.net/qq_37430374/article/details/79180330
http://www.cnblogs.com/jiangjun/archive/2012/11/01/2749937.html
/*************************************************************************************************************/
/*
653.博弈- 取石头 (10分) 
C时间限制：3000 毫秒 |  C内存限制：3000 Kb
题目内容：
m堆石子,甲乙两人轮流取，每次需先选择1堆，并取任意数目的石子. 最后取完者的获胜.
规定甲先取。
输入描述
可能有多组测试数据。每组的第一行是m, 第二行是m个整数，表示每堆石子的数目。
输出描述
每个测试用例，甲失败则输出“No”。
否则输出"Yes", 并在下面的行输出取法。
按堆号顺序输出各种甲能取胜的首次取法a,b,表示在第a堆石子中取完石子后剩下b个，甲可以获胜。
输入样例
2
45 45
3
3 6 9
5
5 7 8 9 10
输出样例
No
Yes
9 5
Yes
8 1
9 0
10 3
*/ 

#include<iostream>
#include<algorithm>
#include<cmath>
using namespace std;
int a[1005];

int main()
{
	int m;
	while(cin>>m)
	{
		int flag=0;
		for(int i=0;i<m;i++)
		{
			cin>>a[i];
			flag^=a[i];
		}
			
		if(!flag)
			cout<<"No"<<endl;//如果flag为0则无法取胜 
		else
		{
			int pos,min,k=0;
			cout<<"Yes"<<endl;
			sort(a,a+m);//从小到大顺序输出 
			bool temp[1005]={0};
			int x=flag;
			while(x)
			{
				temp[k++]=x%2;//存储异或结果的二进制	
			
				x/=2;
			}
			//按照解题方法中：
			//检查flag的二进制表示中最左边一个1,则挑一个该位为1的物品堆,
			//再将该物品堆与flag异或,即为该堆剩下的石子数 
			for(int i=k-1;i>=0;i--)
			{
				if(temp[i])
				{
					min=pow(2,i);//找到flag的二进制表示中最左边的一个1,大于它即为该位为1 
					break;	
				}	
			}
			int result;
			for(int i=0;i<m;i++)
				if(a[i]>=min)
				{
					result=a[i]^flag;
					cout<<a[i]<<" "<<result<<endl;
				}
		}
	}
}

/*************************************************************************************************************/
不知道是什么的随便博弈
/*
652.博弈-移动棋子 (10分) 
C时间限制：3000 毫秒 |  C内存限制：3000 Kb
题目内容：
甲乙两人下一种棋。棋盘是一个n个连续的方格子，棋盘上随机放着m个棋子，一个格子只能放一个棋子。
玩家轮流选择一个棋子移动，移动只能从右向左，至少要移动一个格子，但不能跨越其他的棋子和第一个格子,
最后无法移动格子的玩家失败。甲始终先移动。对任何一种初始局面，你能判断谁能赢？
输入描述
第一行是测试用例的数目c, 下面的行是各测试用例
每个测试用例的第一行是整数m(<=1000),表示有m个棋子,第二行是m个整数，表示每个棋子的方格编号（左到右从1开始编号）
输出描述
每个测试用例中赢的一方。
“甲”或者“乙”或者“不确定”
输入样例
2
3
1 2 3
8
1 5 6 7 9 12 14 17
输出样例
乙
甲
*/

#include<iostream>
using namespace std;

int main()
{
	int T;
	cin>>T;
	while(T--)
	{
		int m;
		cin>>m;
		int a[m];
		for(int i=0;i<m;i++)
			cin>>a[i];
		if(a[0]==1)
		{
			if(m%2==0) cout<<"甲"<<endl;
			else cout<<"乙"<<endl; 
		}
		else
		{
			if(m%2==1) cout<<"甲"<<endl;
			else cout<<"乙"<<endl; 
		}
	}
	
	return 0;	
}
/*************************************************************************************************************/
