/*****************************************************************************************************/
/*
1458.动态规划——大容量背包 (10分) 
C时间限制：3000 毫秒 |  C内存限制：3000 Kb
题目内容：
有n个重量和价值分别为wi 和 vi 的 物品，从这些物品中选择总重量不超过 W 
的物品，求所有挑选方案中物品价值总和的最大值。
1 <= n <=100
1 <= wi <= 10^7
1 <= vi <= 100
1 <= W <= 10^9
输入描述
多组测试数据。
每组测试数据第一行输入，n 和 W ，接下来有n行，每行输入两个数，代表第i个物品的wi 和 vi。
输出描述
满足题意的最大价值，每组测试数据占一行。
输入样例
4 5
2 3
1 2
3 4
2 2
输出样例
7
*/ 
#include<iostream>
#include<cstdio>
using namespace std;
typedef long long ll;

ll dp[5100];
int v[510],w[510];
const ll INF=0x3f3f3f3f;

int main()
{
	int n,b;
	while(scanf("%d%d",&n,&b)!=EOF)
	{
		ll tot_w=0;
		ll tot_v=0;
		for(int i=0;i<n;i++)
		{
			scanf("%d%d",&w[i],&v[i]);
				tot_v+=v[i];
				tot_w+=w[i];
		}
		for(int i=0;i<=tot_v;i++)
			dp[i]=INF;
		dp[tot_v]=tot_w;
		for(int i=0;i<n;i++)
		 {
		 	for(int j=0;j<=tot_v;j++)
		 	{
		 		if(j-v[i]>=0)
		 		{
		 			if(dp[j]-w[i]>=0)
		 				dp[j-v[i]]=min(dp[j-v[i]],dp[j]-w[i]);
				 }
			 }
		 }
		 for(int i=tot_v;i>=0;i--)
		 	if(dp[i]<=b)
		 	{
		 		printf("%d\n",i);
		 		break;
			 }
		
	}
	return 0;
}
/*****************************************************************************************************/
